
%%
	
	no_instruction
	load
	imm_load
	store
	sgt
	sge
	slt
	sle
  	seq
  	sne	
 	if_else
  	goto_type
  	add
  	sub
  	mul
  	div
  	uminus
  	move
  	load_d 
	imm_load_d
	store_d
	add_d
  	sub_d
  	mul_d
  	div_d
  	move_d
  	mtc1
  	mfc1
  	uminus_d

%%

	no_instruction  =	op_nsy, _
	load =    			op_r_o1, lw
	imm_load =		    op_r_o1, li
	store =  			op_r_o1, sw
	sgt =    			op_r_o1_o2, sgt
	sge =    			op_r_o1_o2, sge
	slt =    			op_r_o1_o2, slt
	sle =    			op_r_o1_o2, sle
	seq =    			op_r_o1_o2, seq
	sne =    			op_r_o1_o2, sne
	if_else =    		op_r_o1_o2, bne
	goto_type =    		op_r, j
	add =    			op_r_o1_o2, add
	sub =    			op_r_o1_o2, sub
	mul =    			op_r_o1_o2, mul
	div =    			op_r_o1_o2, div
	uminus =    		op_r_o1, neg
	move =    			op_r_o1, mv
	load_d =    		op_r_o1, lw.d
	imm_load_d =    	op_r_o1, li.d
	store_d =    		op_r_o1, sw.d
	add_d =    			op_r_o1_o2, add.d
	sub_d =    			op_r_o1_o2, sub.d
	mul_d =    			op_r_o1_o2, mul.d
	div_d =    			op_r_o1_o2, div.d
	move_d =    		op_r_o1, mv.d
	mtc1 =    			op_r_o1, mtc
	mfc1 =    			op_r_o1, mfc
	uminus_d =    		op_r_o1, neg.d

%%

	stmt = BEGIN
	reg = {r1,r2,r3,r4,r5,r6,r7,r8,r9,r10}
	regf = {f1,f2,f3,f4,f5,f6}
	cndtnl_goto = {}
	uncndtnl_goto = {}
%%
	ASSGN, PLUS, MINUS, MULT, DIV,
	UMINUS, LT, GT, NE, GE, LE, EQ,
	CON, CONF, ADDR, INT, FLOAT,
	IF, GOTO
%%
	stmt : IF(cndtnl_goto, uncndtnl_goto) = (1)	{no_instruction}
	cndtnl_goto : GOTO(reg , CON) = (1)   {if_else, $1, $2}
	uncndtnl_goto : GOTO(CON)   = (1)    {goto_type, $1}
	stmt: ASSGN(ADDR,reg)	= (1)	{store, $2, $1}
	stmt: ASSGN(ADDR,regf)	= (1)	{store_d, $2, $1}
	reg: PLUS(reg,reg)	= (1)	{add, $$,$1,$2}
	reg: MINUS(reg,reg)	= (1)	{sub, $$,$1,$2}
	reg: MULT(reg,reg)  = (1)		{mul, $$,$1,$2}
	reg: DIV(reg,reg)	= (1)	{div, $$,$1,$2}
	reg: UMINUS(reg)	= (1)	{uminus, $$,$1}

	regf: PLUS(regf,regf)	= (1)	{add_d, $$,$1,$2}
	regf: MINUS(regf,regf)	= (1)	{sub_d, $$,$1,$2}
	regf: MULT(regf,regf)  	= (1)	{mul_d, $$,$1,$2}
	regf: DIV(regf,regf)	= (1)	{div_d, $$,$1,$2}
	regf: UMINUS(regf)		= (1)	{uminus_d, $$,$1}

	reg: LT(reg,reg)	= (1)	{slt, $$,$1,$2}
	reg: GT(reg,reg)	= (1)	{sgt, $$,$1,$2}
	reg: LE(reg,reg)	= (1)	{sle, $$,$1,$2}
	reg: GE(reg,reg)	= (1)	{sge, $$,$1,$2}
	reg: NE(reg,reg)	= (1)	{sne, $$,$1,$2}
	reg: EQ(reg,reg)	= (1)	{seq, $$,$1,$2}

	reg: CON 	= (1)		{imm_load, $$, $0}
	regf: CONF	= (1)		{load_d, $$, $0}

	regf: FLOAT(reg)	= (1)	{mtc1, $$, $1}
	reg: INT(regf)		= (1)	{mfc1, $$, $1}

	reg: ADDR 		= (1)	{load, $$, $0}
	regf: ADDR 		= (1)	{load_d, $$, $0s}

%%
